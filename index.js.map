{"version":3,"file":"index.js","sources":["../src/js/index.js"],"sourcesContent":["import '../css/style.css';\n\n// XJlq9OFMcHAy8pAQK7xj\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n// const BASE_URL = \"https://the-one-api.dev/v2/\";\n// const END_POINT = \"character\";\n// const KEY = 'YZ3dzviq1QC3f0oHGhfv';\n// function getCharacter() {\n//   const param = new URLSearchParams({\n//     limit: 30,\n//     page: 1,\n//   });\n\n// const option = {\n//     method: 'GET',\n//     headers:{\n//         Authorization: `Bearer ${KEY}`\n//     }\n// }\n\n//   fetch(`${BASE_URL}${END_POINT}?${param}`,option).then(resp => console.log(resp))\n// }\n// getCharacter()\n// const target = document.querySelector(\".js-guard\");\n// let options = {\n//   root: null,\n//   rootMargin: \"200px\",\n//   threshold: 1.0,\n// };\n\n// let observer = new IntersectionObserver(callback, options);\n// function callback(evt){\n// console.log(evt);\n// }\n// const BASE_URL = \"https://api.themoviedb.org/3/\";\n// const ENDPOINT = \"trending/movie/day\";\n// const API_KEY = \"345007f9ab440e5b86cef51be6397df1\";\n// const list = document.querySelector(\".js-list\");\n// const loadMore = document.querySelector(\".js-load\");\n// let currentPage = 1;\n\n// loadMore.addEventListener(\"click\", onLoad);\n\n// function onLoad() {\n//   currentPage += 1;\n//   getTrending(currentPage)\n//     .then((data) => {\n//       list.insertAdjacentHTML(\"beforeend\", createMarkup(data.results));\n\n//       if (data.page === data.total_pages) {\n//         loadMore.hidden = true;\n//       }\n//     })\n//     .catch((err) => console.log(err));\n// }\n\n// function getTrending(page = 1) {\n//   return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n//     (resp) => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n\n//       return resp.json();\n//     }\n//   );\n// }\n// getTrending()\n//   .then((data) => {\n//     list.insertAdjacentHTML(\"beforeend\", createMarkup(data.results));\n//     observer.observe(target)\n//     if (data.page !== data.total_pages) {\n//       loadMore.hidden = false;\n//     }\n//   })\n//   .catch((err) => console.log(err));\n\n// function createMarkup(arr) {\n//   return arr\n//     .map(\n//       ({ poster_path, title }) => `<li>\n//     <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n//     <h2>${title}</h2>\n// </li>`\n//     )\n//     .join(\"\");\n// }\n\n// // ПЕРЕРВА ДО 22.00\n\n// let counter = 0;\n// document.addEventListener(\"scroll\", onScroll);\n\n// function onScroll() {\n//   counter += 1;\n//   console.log(counter);\n// }\n\nconst target = document.querySelector('.js-guard');\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst ENDPOINT = 'trending/movie/day';\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\nconst list = document.querySelector('.js-list');\n\nlet currentPage = 1;\nlet options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onLoad, options);\nfunction onLoad(entries, observer) {\n  console.log(entries);\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      getTrending(currentPage)\n        .then(data => {\n          list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n          if (data.page === data.total_pages) {\n            observer.unobserve(target);\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, title }) => `<li>\n    <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n    <h2>${title}</h2>\n</li>`\n    )\n    .join('');\n}\n\nfunction getTrending(page = 1) {\n  return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n    resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n\n      return resp.json();\n    }\n  );\n}\ngetTrending()\n  .then(data => {\n    list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n    observer.observe(target);\n  })\n  .catch(err => console.log(err));\n"],"names":["target","BASE_URL","ENDPOINT","API_KEY","list","currentPage","options","observer","onLoad","entries","entry","getTrending","data","createMarkup","err","arr","poster_path","title","page","resp"],"mappings":"ssBAkGA,MAAMA,EAAS,SAAS,cAAc,WAAW,EAC3CC,EAAW,gCACXC,EAAW,qBACXC,EAAU,mCACVC,EAAO,SAAS,cAAc,UAAU,EAE9C,IAAIC,EAAc,EACdC,EAAU,CACZ,KAAM,KACN,WAAY,QACZ,UAAW,CACb,EAEIC,EAAW,IAAI,qBAAqBC,EAAQF,CAAO,EACvD,SAASE,EAAOC,EAASF,EAAU,CACjC,QAAQ,IAAIE,CAAO,EACnBA,EAAQ,QAAQC,GAAS,CACnBA,EAAM,iBACRL,GAAe,EACfM,EAAYN,CAAW,EACpB,KAAKO,GAAQ,CACZR,EAAK,mBAAmB,YAAaS,EAAaD,EAAK,OAAO,CAAC,EAC3DA,EAAK,OAASA,EAAK,aACrBL,EAAS,UAAUP,CAAM,CAE5B,CAAA,EACA,MAAMc,GAAO,QAAQ,IAAIA,CAAG,CAAC,EAEtC,CAAG,CACH,CAEA,SAASD,EAAaE,EAAK,CACzB,OAAOA,EACJ,IACC,CAAC,CAAE,YAAAC,EAAa,MAAAC,CAAK,IAAO;AAAA,+CACaD,CAAW,UAAUC,CAAK;AAAA,UAC/DA,CAAK;AAAA,MAEf,EACK,KAAK,EAAE,CACZ,CAEA,SAASN,EAAYO,EAAO,EAAG,CAC7B,OAAO,MAAM,GAAGjB,CAAQ,GAAGC,CAAQ,YAAYC,CAAO,SAASe,CAAI,EAAE,EAAE,KACrEC,GAAQ,CACN,GAAI,CAACA,EAAK,GACR,MAAM,IAAI,MAAMA,EAAK,UAAU,EAGjC,OAAOA,EAAK,KAAM,CACxB,CACG,CACH,CACAR,EAAW,EACR,KAAKC,GAAQ,CACZR,EAAK,mBAAmB,YAAaS,EAAaD,EAAK,OAAO,CAAC,EAC/DL,EAAS,QAAQP,CAAM,CACxB,CAAA,EACA,MAAMc,GAAO,QAAQ,IAAIA,CAAG,CAAC"}